
edf : cstyle {
	name = "Eternity Definition File";
	keyword_link = "http://eternity.youfailit.net/index.php?title=Special:Search&search=%s&fulltext=Search";
	constant_link = "http://eternity.youfailit.net/index.php?title=Special:Search&search=%s&fulltext=Search";
	function_link = "http://eternity.youfailit.net/index.php?title=Special:Search&search=%s&fulltext=Search";
	case_sensitive = false;

	keywords = {
		$override,

		// General keywords
		font, damagetype, skin, playerclass, sound, sounddelta, soundsequence,
		enviromanager, ambience, frame, framedelta, string, thingtype,
		thingdelta, splash, terrain, terraindelta, floor, menu, spritenames,
		boss_spawner_types, castinfo, 
		
		// Non-MAPINFO EDF keywords
		acs_spawndata, action, activatesound, activesound, activestate,
		addflags, alias, alphavelocity, altattackstate, args, attacksound, 
		attenuation, baseclass, basictype, bexdest, bexsource, blanksprite, 
		blockcentered, bloodcolor, boss_spawner_probs,  boss_spawner_types, 
		c_font, castinfo, castorder, ceilingsequence, centerwidth, cflags, 
		chars, chunkbasezvel, chunkclass, chunkxvelshift, chunkyvelshift, 
		chunkzvelshift, clipping_dist, close_dist, cmd, cmds, cmp, colorable, 
		commands, correct_height, crashstate, damage, damageamount, 
		damagefactor, damagetimemask, damagetype, deactivatesound, deathsound,
		deathstate, default, defaultskin, defaultsprite, dehackednum, die, 
		diehi, dmg_deathstates, dmg_deathstates.add, dmg_deathstates.remove, 
		dmg_painstates, dmg_painstates.add, dmg_painstates.remove, dmgspecial,
		doom2_title_tics, doomednum, doorsequence, droptype, effect, end,
		f_font, faces, factor, fall, fallhit, fastspeed, feet, filter, first,
		flags, flags2, flags3, flags4, flat, floorsequence, footclip, frame,
		fullbright, gib, height, hu_font, hu_overlayfont, id, in_font,
		in_font_big, in_font_bignum, inactivestate, index, inherits,
		intermission_fade, intermission_pause, intermission_tl, item,
		linearformat, linearlump, linesize, link, linkpitch, linkvol, liquid,
		lump, mask, mass, maxperiod, maxstartwait, maxwait, meleestate,
		minperiod, minstartwait, minversion, minvolume, minwait, misc1, misc2,
		missilestate, mn_episode, mn_episode, mn_font, mn_font_big,
		mn_font_normal, mod, modes, name, nextframe, nextpage, nopcsound,
		nostopcutoff, noway, nukespecial, num, obituary, obituary_melee,
		obituary_normal, obituaryself, oof, pain, painchance, painsound,
		painstate, particle_event, particlefx, patch, patchnumoffset, pcslump,
		period, pickupitem, pitchvariance, platsequence, playersprite, plwdth,
		prefix, prevpage, priority, ptclcolor1, ptclcolor2, punch, radio,
		radius, raisestate, random, randomplayvol, reactiontime, remflags,
		respawnchance, respawntime, seesound, seestate, sfx, singularity,
		skinindex, skinsprite, smallclass, smallclip, smallsound, sound, sounds,
		sourceless, spacesize, spawnhealth, spawnstate, speed, speedlookfast,
		speedlookslow, speedrun, speedstrafe, speedstraferun, speedturn,
		speedturnfast, speedturnslow, speedwalk, splash, splashalert, sprite,
		spriteframe, start, states, stopattack, stopsound, subchannel,
		tallestchar, terrain, text, thingtype, tics, topdamage, topdamagemask,
		translation, translucency, type, uppercase, useptclcolors, val, volume,
		widthdelta, x, xdeathstate, xscale, y, yscale, 
		
		// Mapinfo properties
		acsscript, altskyname, boss-specials, colormap, creator, doublesky, 
		edf-intername, endofgame, extradata, finale-secret, finaletype, 
		fullbright, gravity, inter-backdrop, intermusic, interpic, intertext,
		killfinale, killstats, levelname, levelpic, levelpicnext, 
		levelpicsecret, levelscript, leveltype, lightning, music, nextlevel,
		nextsecret, noautosequences, outdoorfog, partime, skydelta, sky2delta,
		skyname, sky2name, sound-swtchn, sound-swtchx, sound-stnmov, 
		sound-pstop, sound-bdcls, sound-bdopn, sound-dorcls, sound-doropn,
		sound-pstart, sound-fcmove, unevenlight,
		
		// Counter codepointer keywords
		less, lessorequal, greater, greaterorequal, equal, notequal, and, 
		less_counter, lessorequal_counter, greater_counter, 
		greaterorequal_counter, equal_counter, notequal_counter, and_counter,
		weapon, flash,
		assign, add, sub, mul, div, mod, andnot, or, xor, rand, randmod,
		rshift, lshift,
		hitdice, rshift, lshift, abs, negate, not, invert,

		// HticExplode keywords
		default, dsparilbspark, floorfire, timebomb,
		
		// BeastPuff keywords
		momentum, nomomentum,
		
		// Scratch keywords
		usemisc1, usedamage, usecounter, useconstant,
		
		// StartScript keywords
		gamescript, levelscript, acs,
		
		// SetTics keywords
		constant, counter,
		
		// MissileAttack keywords
		normal, homing,
		
		// BulletAttack keywords
		ba_always, ba_never, ba_ssg, ba_monster, always, never, ssg, monster,
		
		// ThingSummon keywords
		kill, remove, normal, makechild,
		
		// ShowMessage keywords
		msg_console, msg_normal, msg_center,
		
		// PlaySoundEx keywords
		chan_auto, chan_weapon, chan_voice, chan_item, chan_body, attn_normal,
		attn_idle, attn_static, attn_none, auto, weapon, voice, item, body,
		normal, idle, static, none
	}

	constants = {
		// Flags
		SPECIAL, SOLID, SHOOTABLE, NOSECTOR, NOBLOCKMAP, AMBUSH, JUSTHIT,
		JUSTATTACKED, SPAWNCEILING, NOGRAVITY, DROPOFF, PICKUP, NOCLIP, SLIDE,
		FLOAT, TELEPORT, MISSILE, DROPPED, SHADOW, NOBLOOD, CORPSE, INFLOAT,
		COUNTKILL, COUNTITEM, SKULLFLY, NOTDMATCH, TRANSLATION1, TRANSLATION2,
		TOUCHY, BOUNCES, FRIEND, TRANSLUCENT,
		
		// Flags2
		LOGRAV, NOSPLASH, NOSTRAFE, NORESPAWN, ALWAYSRESPAWN, REMOVEDEAD,
		NOTHRUST, NOCROSS, JUMPDOWN, PUSHABLE, MAP07BOSS1, MAP07BOSS2, E1M8BOSS,
		E2M8BOSS, E3M8BOSS, BOSS, E4M6BOSS, E4M8BOSS, FOOTCLIP, FLOATBOB,
		DONTDRAW, SHORTMRANGE, LONGMELEE, RANGEHALF, HIGHERMPROB,
		CANTLEAVEFLOORPIC, SPAWNFLOAT, INVULNERABLE, DORMANT, SEEKERMISSILE,
		DEFLECTIVE, REFLECTIVE,
		
		// Flags3
		GHOST, THRUGHOST, NODMGTHRUST, ACTSEESOUND, LOUDACTIVE, E5M8BOSS,
		DMGIGNORED, BOSSIGNORE, SLIDE, TELESTOMP, WINDTHRUST, FIREDAMAGE,
		KILLABLE, DEADFLOAT, NOTHRESHOLD, FLOORMISSILE, SUPERITEM, NOITEMRESP,
		SUPERFRIEND, INVULNCHARGE, EXPLOCOUNT, CANNOTPUSH, TLSTYLEADD,
		SPACMONSTER, SPACMISSILE, NOFRIENDDMG, 3DDECORATION, ALWAYSFAST,
		PASSMOBJ, DONTOVERLAP, CYCLEALPHA, RIP,
		
		// Flags4
		AUTOTRANSLATE, NORADIUSDMG, FORCERADIUSDMG, LOOKALLAROUND, NODAMAGE,
		SYNCHRONIZED, NORANDOMIZE, BRIGHT,
		
		// ParticleFX flags
	    ROCKET, GRENADE, FLIES, BFG, FLIESONDEATH, DRIP, REDFOUNTAIN,
		GREENFOUNTAIN, BLUEFOUNTAIN, YELLOWFOUNTAIN, PURPLEFOUNTAIN,
		BLACKFOUNTAIN, WHITEFOUNTAIN,

		// Game name constants
		DOOM, HERETIC
	}

	functions {
		// EDF "preprocessor" functions
		ifgametype		= "game name";
		ifngametype		= "game name";
		ifdisabled		= "game name";
		ifenabled		= "game name";
		ifenabledany	= "game name[, other game names ...]";
		ifdisabledany	= "game name[, other game names ...]";
		endif;
		enable			= "game name";
		disable			= "game name";
		lumpinclude		= "lump name";
		stdinclude		= "lump name";
		userinclude		= "lump name";
		include			= "lump name";
		include_prev	= "lump name";
		bexinclude		= "lump name";
		bexoverride;
		includeifenabled= "lump name, game name";


		// Action functions
		// Those are the A_Foobar forms because the Foobar form are generally
		// used in "traditional" EDF declarations where the call is within a
		// string and the SLADE lexer therefore does not notice them. As a
		// result, they will only be highlighted when used in a DECORATE block.
		
		// Common action functions
		A_Chase;
		A_Die;
		A_Explode;
		A_FaceTarget;
		A_Fall;
		A_Look;
		A_Pain;
		A_KeepChasing;
		A_RandomWalk;
		A_Scream;
		A_XScream;
		A_PlayerScream;
		A_PlayerSkull;
		A_NailBomb;
		A_Detonate;
		
		// Counter action functions
		A_HealthJump = "state, comparison, value OR counter";
		A_CounterJump = "state, comparison, value OR counter, counter";
		A_CounterSwitch = "counter, first frame, number of frames";
		A_SetCounter = "counter, value, operation";
		A_CounterOp = "operand, operand, counter, operation";
		A_CopyCounter = "source, destination";
		A_WeaponCtrJump = "state, comparison, value OR counter, counter, psprite";
		A_WeaponCtrSwitch = "counter, first frame, number of frames, psprite";
		A_WeaponSetCtr = "counter, value, operation";
		A_WeaponCtrOp = "operand, operand, counter, operation";
		A_WeaponCopyCtr = "source, destination";
		A_CheckReloadEx = "state, test, value OR counter, psprite";
		
		// Doom action functions
		A_PosAttack;
		A_SPosAttack;
		A_CPosAttack;
		A_CPosRefire;
		A_TroopAttack;
		A_SargAttack;
		A_HeadAttack;
		A_BruisAttack;
		A_SpidRefire;
		A_BspiAttack;
		A_BabyMetal;
		A_Hoof;
		A_Metal;
		A_CyberAttack;
		A_SkelMissile;
		A_Tracer;
		A_SkelWhoosh;
		A_SkelFist;
		A_VileChase;
		A_VileStart;
		A_Fire;
		A_StartFire;
		A_FireCrackle;
		A_VileTarget;
		A_VileAttack;
		A_FatRaise;
		A_FatAttack1;
		A_FatAttack2;
		A_FatAttack3;
		A_SkullAttack;
		A_BetaSkullAttack;
		A_Stop;
		A_PainShootSkull;
		A_PainAttack;
		A_PainDie;
		A_BossDeath;
		A_KeenDie;
		A_BrainAwake;
		A_BrainPain;
		A_BrainScream;
		A_BrainExplode;
		A_BrainDie;
		A_BrainSpit;
		A_SpawnFly;
		A_SpawnSound;
		
		// Heretic action functions
		A_SpawnGlitter = "dehacked number, z momentum";
		A_AccelGlitter;
		A_SpawnAbove = "dehacked number, state, z offset";
		A_MummyAttack;
		A_MummyAttack2;
		A_MummySoul;
		A_HticTracer = "threshold, maxturn";
		A_ClinkAttack;
		A_WizardAtk1;
		A_WizardAtk2;
		A_WizardAtk3;
		A_Sor1Chase;
		A_Sor1Pain;
		A_Srcr1Attack;
		A_SorcererRise;
		A_Srcr2Decide;
		A_Srcr2Attack;
		A_BlueSpark;
		A_GenWizard;
		A_Sor2DthInit;
		A_Sor2DthLoop;
		A_HticExplode = "keyword";
		A_HticBossDeath;
		A_PodPain;
		A_RemovePod;
		A_MakePod;
		A_VolcanoBlast;
		A_VolcBallImpact;
		A_KnightAttack;
		A_DripBlood;
		A_BeastAttack;
		A_BeastPuff = "keyword";
		A_SnakeAttack;
		A_SnakeAttack2;
		A_MinotaurAtk1;
		A_MinotaurDecide;
		A_MinotaurCharge;
		A_MinotaurAtk2;
		A_MinotaurAtk3;
		A_MntrFloorFire;
		A_LichFire;
		A_LichWhirlwind;
		A_LichAttack;
		A_WhirlwindSeek;
		A_LichIceImpact;
		A_LichFireGrow;
		A_ImpChargeAtk;
		A_ImpMeleeAtk;
		A_ImpMissileAtk;
		A_ImpDeath;
		A_ImpXDeath1;
		A_ImpXDeath2;
		A_ImpExplode;
		A_PhoenixPuff;
		
		// General action functions
		A_Mushroom = "thing";
		A_Spawn;
		A_Turn;
		A_Face;
		A_Scratch = "keyword, value, sound";
		A_PlaySound;
		A_RandomJump;
		A_LineEffect;
		A_SetFlags = "field, OR value";
		A_UnSetFlags = "field, NOT AND value";
		A_StartScript = "script number, VM keyword, param 1, param 2, param 3";
		A_FaceMoveDir;
		A_GenRefire = "stop state, chance";
		A_GenTracer;
		A_SetTics = "amount, randomizer, toggle";
		A_MissileAttack = "missile type, keyword, Z offset, angle[, melee state]";
		A_MissileSpread = "missile type, amount, Z offset, sweep[, melee state]";
		A_BulletAttack = "sound, keyword, amount, damage factor, damage modulus";
		A_ThingSummon = "type, distance, Z offset, keyword, keyword";
		A_KillChildren;
		A_AproxDistance = "dest";
		A_ShowMessage = "message number, keyword";
		A_AmbientThinker;
		A_SteamSpawn = "type, range_horiz, angle_vert, range_vert, speed";
		A_TargetJump = "state";
		A_EjectCasing = "front distance, center dist, Z offset, casing type";
		A_CasingThrust = "horiz force, vert force";
		
		// DECORATE-inspired action functions
		A_AlertMonsters;
		A_CheckPlayerDone = "state";
		A_ClearSkin;
		A_DetonateEx = "damage, radius, hurt self?, alert?, full damage radius";
		A_FadeIn = "step";
		A_FadeOut = "step";
		A_Jump = "chance, state[, more states...]";
		A_JumpIfNoAmmo = "state";
		A_JumpIfTargetInLOS = "statenum, fov, proj_target";
		A_SetTranslucent = "alpha, mode";
		A_PlaySoundEx = "sound, channel, loop?, attenuation, volume";
	}
}
