actor MP40Giver : ClassWeaponGiver 23403
{	
	Scale 0.5
	states
	{
		Spawn:
			MP4P A 0
			MP4P A -1 A_CheckFlag("DROPPED", "Dropped")
			loop
		Pickup:
			TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(GIVEWEAPON, 3, 30, 0) == TRUE, "Stay")
			goto Remove
		Dropped:
			TNT1 A 0 A_SpawnItemEx("MP40Giver_Dropped", 0, 0, 0, velx, vely, velz, angle, SXF_ABSOLUTEVELOCITY | SXF_ABSOLUTEANGLE, 0)
			stop
	}
}

actor MP40Giver_Dropped : MP40Giver
{
	States
	{
		Spawn:
			MP4P A 63000
			goto FadeAway
		Pickup:
			TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(GIVEWEAPON, 3, 15, 1) == TRUE, "Stay")
			goto Remove
	}
}

ACTOR MP40Clip : Ammo
{
	Inventory.MaxAmount 30 // size of the clip
	Ammo.BackpackAmount 0
	Ammo.BackpackMaxAmount 30 //MUST be the same as Inventory.MaxAmmount
	Inventory.Icon "MAGICON2"
	+IGNORESKILL
}

actor Mp40 : Weapon
{
	Tag "Maschinenpistole 40"
	decal BulletChip
	obituary "%o was perforated by %k's MP40."
	Inventory.PickupSound "misc/w_pkup"
	Inventory.PickupMessage "Snagged an MP40!"
	weapon.selectionorder 1900
	weapon.kickback 100
	Weapon.AmmoType1 "MP40Clip"
	Weapon.AmmoType2 "MechAmmo"
	Weapon.AmmoGive2 0
	Weapon.AmmoUse1 1
	AttackSound "MP40Fire"
	+WEAPON.AMMO_OPTIONAL
	states
	{
	Ready:
		MP40 A 0 A_JumpIfInventory("TailsClassCheck", 1, "TailsReady")
		MP40 A 1 A_WeaponReady
		loop
	Deselect:
		MP40 A 0 A_JumpIfInventory("TailsClassCheck", 1, "TailsDeselect")
		MP40 A 1 A_Lower
		loop
	Select:
		MP40 A 0 A_JumpIfInventory("TailsClassCheck", 1, "TailsSelect")
		MP40 A 1 A_Raise
		loop
	Fire:
		MP40 A 0 A_JumpIfNoAmmo("ReloadCheck")
		MP40 A 0 A_JumpIfInventory("TailsClassCheck", 1, "TailsFire")
		MP40 B 0 A_GunFlash
		MP40 B 1 BRIGHT A_SetPitch(pitch-0.75)
		MP40 C 1 BRIGHT A_SetPitch(pitch+0.25)
		MP40 DE 1 A_SetPitch(pitch+0.25)
		MP40 A 0 A_Refire
		goto Ready

	AltFire:
		MP40 A 0
		goto ReloadCheck
		
	Flash:
		MP4F A 0 bright A_FireBullets (2, 1, -1, 5, "NewBulletPuff", FBF_USEAMMO)
		MP4F A 0 A_FireCustomMissile("BulletCasingSpawnerRight",-45+random(-8,8),0,6,6)
		MP4F A 0 A_Quake(3, 2, 0, 1, "") 
		MP4F A 2 bright A_Light2
		MP4F B 1 bright A_Light1
		TNT1 A 0 bright A_Light0
		stop	
		
	ReloadCheck:
		MP4R A 0 A_JumpIfInventory("MP40Clip",30,2)
		MP4R A 0 A_JumpIfInventory("MechAmmo",1,"ReloadStart")
		MP4R A 0
		goto Ready
	ReloadStart:
		MP4R A 0 A_JumpIfInventory("TailsClassCheck", 1, "TailsReloadStart")
		MP4R ABCD 3
		MP4R E 3 A_PlaySound("MP40BoltBack", CHAN_AUTO)
		MP4R FGHIJ 3
		MP4R K 3 A_PlaySound("MP40ClipOut", CHAN_AUTO)
		MP4R LMNO 3
		MP4R P 3 A_PlaySound("MP40ClipIn", CHAN_AUTO)
		MP4R Q 3
		goto ReloadAmmo
	ReloadAmmo:
		TNT1 A 0 A_TakeInventory("MechAmmo",1)
		TNT1 A 0 A_GiveInventory("MP40Clip",1)
		TNT1 A 0 A_JumpIfInventory("MP40Clip",30,"ReloadDone")
		TNT1 A 0 A_JumpIfInventory("MechAmmo",1,"ReloadAmmo")
		goto ReloadDone
	ReloadDone:
		MP4R RSTUV 3
		MP4R W 3 A_PlaySound("MP40BoltSlap", CHAN_AUTO)
		MP4R XYZ 3
		goto Ready

	TailsReady:
		MP4T A 1 A_WeaponReady
		loop
	TailsSelect:
		MP4T A 1 A_Raise
		loop
	TailsDeselect:
		M40T A 1 A_Lower
		loop
	TailsFire:
		MP4T B 0 A_GunFlash
		MP4T B 1 BRIGHT A_SetPitch(pitch-0.75)
		MP4T C 1 BRIGHT A_SetPitch(pitch+0.25)
		MP4T DE 1 A_SetPitch(pitch+0.25)
		MP4T A 0 A_Refire
		goto TailsReady		
	TailsReloadStart:
		M4RT ABCD 3
		M4RT E 3 A_PlaySound("MP40BoltBack", CHAN_AUTO)
		M4RT FGHIJ 3
		M4RT K 3 A_PlaySound("MP40ClipOut", CHAN_AUTO)
		M4RT LMNO 3
		M4RT P 3 A_PlaySound("MP40ClipIn", CHAN_AUTO)
		M4RT Q 3
		goto TailsReloadAmmo
	TailsReloadAmmo:
		TNT1 A 0 A_TakeInventory("MechAmmo",1)
		TNT1 A 0 A_GiveInventory("MP40Clip",1)
		TNT1 A 0 A_JumpIfInventory("MP40Clip",30,"TailsReloadDone")
		TNT1 A 0 A_JumpIfInventory("MechAmmo",1,"TailsReloadAmmo")
		goto TailsReloadDone
	TailsReloadDone:
		M4RT RSTUV 3
		M4RT W 3 A_PlaySound("MP40BoltSlap", CHAN_AUTO)
		M4RT XYZ 3
		goto TailsReady
	}
}

ACTOR Duke64Clip : Ammo
{
	Inventory.MaxAmount 14 // size of the clip
	Ammo.BackpackAmount 0
	Ammo.BackpackMaxAmount 14 //MUST be the same as Inventory.MaxAmmount
	Inventory.Icon "MAGICON2"
	+IGNORESKILL
}

actor M1911 : Weapon
{
	Tag "Colt M1911"
	decal BulletChip
	obituary "%k tore %o a new asshole."
	Inventory.PickupMessage "Colt M1911"
	weapon.selectionorder 1900
	weapon.kickback 100
	Weapon.UpSound "Duke64ClipIn"
	Weapon.AmmoType1 "Duke64Clip"
	Weapon.AmmoType2 "MechAmmo"
	Weapon.AmmoGive2 0
	Weapon.AmmoUse1 1
	AttackSound "Duke64PistolFire"
	+WEAPON.AMMO_OPTIONAL
	states
	{
		Ready:
			DN6P A 1 A_WeaponReady
			loop
		Select:
			DN6P A 1 A_Raise
			loop
		Deselect:
			DN6P A 1 A_Lower
			loop
		Fire:
			DN6P B 0 A_JumpIfNoAmmo("ReloadCheck")
			DN6P B 0 A_Gunflash
			DN6P B 1 BRIGHT A_SetPitch(pitch-1.0)
			DN6P CDEF 1 A_SetPitch(pitch+0.25)
			DN6P A 1
			DN6P A 1 A_ReFire
			goto Ready
		AltFire:
			DN6P A 0
			Goto ReloadCheck
		ReloadCheck:
			DN6P D 0 A_JumpIfInventory("Duke64Clip",14,2)
			DN6P D 0 A_JumpIfInventory("MechAmmo",1,"ReloadStart")
			DN6P A 0
			goto Ready
		ReloadStart:
			DN6P G 5 A_PlaySound("Duke64Slide", CHAN_AUTO)
			DN6P H 5 A_PlaySound("Duke64ClipOut", CHAN_AUTO)
			DN6P I 2
			DN6P H 5
			DN6P J 2
			DN6P K 2
			goto ReloadAmmo
		ReloadAmmo:
			TNT1 A 0 A_TakeInventory("MechAmmo",1)
			TNT1 A 0 A_GiveInventory("Duke64Clip",1)
			TNT1 A 0 A_JumpIfInventory("Duke64Clip",14,"ReloadDone")
			TNT1 A 0 A_JumpIfInventory("MechAmmo",1,"ReloadAmmo")
			goto ReloadDone
		ReloadDone:
			DN6P L 2 A_PlaySound("Duke64ClipIn", CHAN_AUTO)
			DN6P M 2 A_PlaySound("Duke64ClipLock", CHAN_AUTO)
			DN6P N 2
			DN6P H 2
			DN6P G 2
			goto Ready
		Flash:
			TNT1 A 0 bright A_FireBullets(2, 2, 1, 15, "NewBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
			TNT1 A 0 A_FireCustomMissile("BulletCasingSpawnerLeft",45+random(-8,8),0,0,6)
			TNT1 A 0 A_Quake(3, 2, 0, 1, "") 
			TNT1 A 2 bright A_Light2
			TNT1 A 1 bright A_Light1
			TNT1 A 0 bright A_Light0
			stop	
	}
}