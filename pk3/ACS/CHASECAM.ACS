#library "CHASECAM"
#include "zcommon.acs"

// CHASECAM.ACS - Chasecam code.

#define C_TID		5000	//Default camera tid
#define W_TID		5001	//Waypoint tid
#define VIEW_HEIGHT	48.0	//The approximate hight of the player's view

bool camera_mode;		//Variable for turning the camera on or off.
int playerheight;
	
Script "STARTCAMERA" (VOID) CLIENTSIDE
{
	if((ConsolePlayerNumber() != PlayerNumber()) || (ConsolePlayerNumber() == -1))
	{
		Terminate;
	}
	
	playerheight = (GetActorProperty(0, APROP_Height)/2)-GetActorProperty(0, APROP_AttackZOffset);
	camera_mode = ON;
	ACS_NamedExecuteAlways("CHASECAM", 0);
}

Script "CHASECAM" (void) CLIENTSIDE
{
	if((ConsolePlayerNumber() != PlayerNumber()) || (ConsolePlayerNumber() == -1))
	{
		Terminate;
	}
	
	while (camera_mode == ON)
	{	
		int a = GetActorAngle(0);
		int p = GetActorPitch(0);
		
		if (!ThingCountName ("ChaseCam2", C_TID))
		{
			SpawnForced("ChaseCam2", GetActorX(0), GetActorY(0), GetActorZ(0), C_TID, 0);
			if (ThingCountName ("ChaseCam2", C_TID))
			{
				LineAttack(0, a + 0.5, -p, 0, "ChaseCamWaypoint", "", GetCVar("chase_dist"), FHF_NORANDOMPUFFZ);
				SetActorPitch (C_TID, p);
				ChangeCamera (C_TID, 0, 0);
			}
			else
			{
				camera_mode = OFF;
				print (s:"Camera script failed to initialize.");
			}
		}
		else
		{
			LineAttack(0, a + 0.5, -p, 0, "ChaseCamWaypoint", "", GetCVar("chase_dist"), FHF_NORANDOMPUFFZ);
			//SetActorAngle (C_TID + p_num, a);
			SetActorPitch (C_TID, p);
		}
		
		delay(1);
	}
}

Script "MOVECAMERA" (void) CLIENTSIDE
{
	Thing_ChangeTID(0, W_TID);
	SetActorPosition(W_TID, GetActorX(W_TID), GetActorY(W_TID), GetActorZ(W_TID)+playerheight+GetCVar("chase_height"), false);
	Warp(C_TID, 0, 0, 0, 0, WARPF_MOVEPTR | WARPF_INTERPOLATE, "", false, 0, 0, 0);
	Thing_Remove(W_TID);
}

Script "STOPCAMERA" DEATH CLIENTSIDE
{
	if(camera_mode == ON)
	{
		camera_mode = OFF;
		Thing_Remove (C_TID);
	}
}

Script "STOPCAMERA_DISCONNECT" (int p_num) DISCONNECT CLIENTSIDE
{
	if(camera_mode == ON)
	{
		camera_mode = OFF;
		Thing_Remove (C_TID);
	}
}
