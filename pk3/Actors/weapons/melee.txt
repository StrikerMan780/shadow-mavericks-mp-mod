actor DukeKickCheck : Inventory
{
	inventory.amount 1
	inventory.maxamount 1
	-INVBAR
	-INTERHUBSTRIP
	+INVENTORY.UNDROPPABLE
	+INVENTORY.HUBPOWER
	states
	{
		Spawn:
			TNT1 A 1
			loop
	}
}

actor Melee : Weapon
{
	obituary "%o was beaten to a pulp by %k."
	weapon.selectionorder 3700
	AttackSound "*fist"
	weapon.kickback 100
	+WEAPON.WIMPY_WEAPON
	+WEAPON.MELEEWEAPON
	+WEAPON.ALLOW_WITH_RESPAWN_INVUL
	+WEAPON.CHEATNOTWEAPON
	+WEAPON.NOALERT
	+WEAPON.AMMO_OPTIONAL
	states
	{
	Ready:
		PUNG A 0 A_JumpIfInventory("TailsClassCheck", 1, "TailsReady")
		PUNG A 0 A_JumpIfInventory("LinkClassCheck", 1, "LinkReady")
		PUNG A 0 A_JumpIfInventory("DukeClassCheck", 1, "DukeReady")
		PUNG A 1 A_WeaponReady
		goto Ready+3
	Deselect:
		PUNG A 0 A_JumpIfInventory("TailsClassCheck", 1, "TailsDeselect")
		PUNG A 0 A_JumpIfInventory("LinkClassCheck", 1, "LinkDeselect")
		PUNG A 0 A_JumpIfInventory("DukeClassCheck", 1, "DukeDeselect")
		PUNG A 1 A_Lower
		goto Deselect+3
	Select:
		PUNG A 0 A_JumpIfInventory("TailsClassCheck", 1, "TailsSelect")
		PUNG A 0 A_JumpIfInventory("LinkClassCheck", 1, "LinkSelect")
		PUNG A 0 A_JumpIfInventory("DukeClassCheck", 1, "DukeSelect")
		PUNG A 1 A_Raise
		goto Select+3
	Hold:
	Fire:
		PUNG A 0 A_JumpIfInventory("TailsClassCheck", 1, "TailsFire")
		PUNG A 0 A_JumpIfInventory("LinkClassCheck", 1, "LinkFire")
		PUNG A 0 A_JumpIfInventory("DukeClassCheck", 1, "DukeFire")
		PUNG A 0 A_JumpIfInventory("PowerStrength", 1, "BerserkFire")
		PUNG A 0 A_Jump(56, "Fire3")
		PUNG A 0 A_Jump(120, "Fire2")
		PUNG B 1
		PUNG C 2 A_CustomPunch(20, true, 0, "FistPuff")
		PUNG D 5
		PUNG C 2
		PUNG B 2
		TNT1 A 1
		TNT1 A 3 A_ReFire
		goto Ready
	Fire2:
		PUN2 A 1
		PUN2 B 1 A_CustomPunch(24, true, 0, "FistPuff")
		PUN2 C 1
		PUN2 D 5
		PUN2 C 2
		PUN2 B 1
		PUN2 A 1
		TNT1 A 1
		TNT1 A 3 A_ReFire
		goto Ready
	Fire3:
		PUN2 A 1 A_PlaySoundEx("skeleton/swing", "auto", 0)
		PUN2 B 1
		PUN2 C 1 A_CustomPunch(40, true, 0, "FistPuff3")
		PUN2 DEFG 1
		TNT1 A 9
		TNT1 A 3 A_ReFire
		goto Ready
	BerserkFire:
		PUNG A 0 A_Jump(56, "BerserkFire3")
		PUNG A 0 A_Jump(120, "BerserkFire2")
		PUNG B 1
		PUNG C 2 A_CustomPunch(100, true, 0, "FistPuff")
		PUNG D 5
		PUNG C 2
		PUNG B 2
		TNT1 A 1
		TNT1 A 3 A_ReFire
		goto Ready
	BerserkFire2:
		PUN2 A 1
		PUN2 B 1 A_CustomPunch(104, true, 0, "FistPuff")
		PUN2 C 1
		PUN2 D 5
		PUN2 C 2
		PUN2 B 1
		PUN2 A 1
		TNT1 A 1
		TNT1 A 3 A_ReFire
		goto Ready
	BerserkFire3:
		PUN2 A 1 A_PlaySoundEx("skeleton/swing", "auto", 0)
		PUN2 B 1
		PUN2 C 1 A_CustomPunch(128, true, 0, "FistPuff3")
		PUN2 DEFG 1
		TNT1 A 9
		TNT1 A 3 A_ReFire
		goto Ready

	// **** Tails ****

	TailsReady:
		PUNT A 1 A_WeaponReady
		loop
	TailsDeselect:
		PUNT A 1 A_Lower
		loop
	TailsSelect:
		PUNT A 1 A_Raise
		loop
	TailsFire:
		PUNT A 0 A_JumpIfInventory("PowerStrength", 1, "TailsBerserkFire")
		PUNT B 1
		PUNT C 1
		PUNT D 1 A_CustomPunch(30, true, 0, "FistPuff")
		PUNT EFGH 1
		TNT1 A 9
		PUNT A 3 A_ReFire
		goto TailsReady
	TailsBerserkFire:
		PUNT B 1
		PUNT C 1
		PUNT D 1 A_CustomPunch(150, true, 0, "FistPuff2")
		PUNT EFGH 1
		TNT1 A 9
		PUNT A 3 A_ReFire
		goto TailsReady

	// **** Link ****

	LinkReady:
		MSWD A 1 BRIGHT A_WeaponReady
		loop

	LinkDeselect:
		MSWD A 1 BRIGHT A_Lower
		loop

	LinkSelect:
		MSWD A 1 BRIGHT A_Raise
		loop

	LinkFire:
		MSW1 A 0 A_PlaySound("LinkAttack")
		MSW1 A 0 A_PlayWeaponSound("LinkSwordSwing")
		MSW1 A 0 A_Jump(136, "LinkFire2", "LinkFire3", "LinkFire4", "LinkFire5", "LinkFire6")
		MSW1 A 0 A_Recoil(-4)
		MSW1 AB 1 BRIGHT
		MSW1 A 0 BRIGHT A_CustomPunch(11, 0, 0, "MasterSwordHit", 76)
		MSW1 CDE 1 BRIGHT
		TNT1 A 10 BRIGHT
		MSWD A 2 BRIGHT
		TNT1 A 0 A_Refire
		goto LinkReady

	LinkFire2:
		MSW2 A 0 A_Recoil(-6)
		MSW2 AB 1 BRIGHT
		MSW2 A 0 BRIGHT A_CustomPunch(16, 0, 0, "MasterSwordHit", 86)
		MSW2 CDE 1 BRIGHT
		TNT1 A 10 BRIGHT
		MSWD A 2 BRIGHT
		TNT1 A 0 A_Refire
		goto LinkReady

	LinkFire3:
		MSW3 A 0 A_Recoil(-3)
		MSW3 AB 1 BRIGHT
		MSW3 A 0 BRIGHT A_CustomPunch(14, 0, 0, "MasterSwordHit", 76)
		MSW3 CDE 1 BRIGHT
		TNT1 A 10 BRIGHT
		MSWD A 2 BRIGHT
		TNT1 A 0 A_Refire
		goto LinkReady

	LinkFire4:
		MSW4 A 0 A_Recoil(-3)
		MSW4 AB 1 BRIGHT
		MSW4 A 0 BRIGHT A_CustomPunch(14, 0, 0, "MasterSwordHit", 76)
		MSW4 CDE 1 BRIGHT
		TNT1 A 10 BRIGHT
		MSWD A 2 BRIGHT
		TNT1 A 0 A_Refire
		goto LinkReady

	LinkFire5:
		MSW5 A 0 A_Recoil(-6)
		MSW5 AB 1 BRIGHT
		MSW5 A 0 BRIGHT A_CustomPunch(16, 0, 0, "MasterSwordHit", 86)
		MSW5 CDE 1 BRIGHT
		TNT1 A 10 BRIGHT
		MSWD A 2 BRIGHT
		TNT1 A 0 A_Refire
		goto LinkReady

	LinkFire6:
		MSW6 A 0 A_Recoil(-12)
		MSW6 AB 1 BRIGHT
		MSW6 C 1 BRIGHT
		MSW6 D 1 BRIGHT A_CustomPunch(24, 0, 0, "MasterSwordHit", 100)
		MSW6 E 10 BRIGHT
		MSW6 D 2 BRIGHT A_CustomPunch(8, 0, 0, "MasterSwordHit", 76)
		MSW6 CBA 2 BRIGHT
		TNT1 A 5 BRIGHT
		MSWD A 2 BRIGHT
		TNT1 A 0 A_Refire
		goto LinkReady

	// **** Duke ****

	DukeReady:
		TNT1 A 0 A_TakeInventory("DukeKickCheck", 1)
		TNT1 A 1 A_WeaponReady
		goto DukeReady+1
	DukeDeselect:
		TNT1 A 0 A_TakeInventory("DukeKickCheck", 1)
		TNT1 A 1 A_Lower
		goto DukeDeselect+1
	DukeSelect:
		TNT1 A 1 A_Raise
		loop
	DukeFire:
		DKIK A 0 A_GiveInventory("DukeKickCheck", 1)
		DKIK A 0 A_JumpIfInventory("PowerStrength", 1, "DukeBerserkFire")
		DKIK A 7
		DKIK B 5 A_CustomPunch(24, true, 0, "KickPuff")
		DKIK A 8 A_ReFire
		goto DukeReady
	DukeBerserkFire:
		DKIK A 7
		DKIK B 5 A_CustomPunch(100, true, 0, "KickPuff2")
		DKIK A 8 A_ReFire
		goto DukeReady
	}
}