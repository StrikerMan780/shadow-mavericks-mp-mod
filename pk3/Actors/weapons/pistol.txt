ACTOR PistolClip : Ammo
{
	Inventory.MaxAmount 14 // size of the clip
	Ammo.BackpackAmount 0
	Ammo.BackpackMaxAmount 14 //MUST be the same as Inventory.MaxAmmount
	Inventory.Icon "MAGICON2"
	+IGNORESKILL
}

ACTOR PistolAccuracy : Inventory
{
	Inventory.Amount 1
	Inventory.MaxAmount 8
	-INVBAR
}

actor Silenced : BaseCheck
{
}

actor NewPistol : Weapon Replaces Pistol
{
	Tag "Walther P99"
	Decal BulletChip
	obituary "%k bust a cap in %o's ass."
	Inventory.PickupSound "misc/w_pkup"
	Inventory.PickupMessage "Picked up a P99!"
	Inventory.RestrictedTo "Marine"
	Weapon.AmmoType1 "PistolClip"
	Weapon.AmmoType2 "MechAmmo"
	Weapon.AmmoGive1 0
	Weapon.AmmoGive2 0
	Weapon.AmmoUse1 1
	weapon.selectionorder 1900
	Weapon.BobSpeed 1.5
	Weapon.BobStyle "InverseSmooth"
	+WEAPON.WIMPY_WEAPON
	+WEAPON.NOAUTOFIRE
	+WEAPON.AMMO_OPTIONAL
	+WEAPON.NOALERT
	states
	{
		Ready:
			PISG A 0 A_JumpIfInventory("Silenced", 1, "SilReady")
			PISG AAA 1 A_WeaponReady(WRF_ALLOWRELOAD)
			PISG A 0 A_GunFlash("TakeAccuracy", GFF_NOEXTCHANGE)
			loop
		Deselect:
			PISG A 0 A_TakeInventory("PistolAccuracy", 50)
			PISG A 0 A_JumpIfInventory("Silenced", 1, "SilDeselect")
			goto DeselectLoop
		DeselectLoop:
			PISG AAA 0 A_Lower
			PISG A 1 A_Lower
			loop
		Select:
			PISG A 0 A_SetCrosshair(90)
			PISG A 0 A_JumpIfInventory("Silenced", 1, "SilSelect")
			goto SelectLoop
		SelectLoop:
			PISG AAA 0 A_Raise
			PISG A 1 A_Raise
			loop
		Fire:
			PISG B 0 A_JumpIfInventory("Silenced", 1, "SilFire")
			PISG B 0 A_JumpIfNoAmmo("ReloadCheck")
			PISG B 0 A_Quake(2, 2, 0, 1, "")
			PISG B 0 BRIGHT A_GunFlash("Flash")
			PISG B 0 BRIGHT A_AlertMonsters
			PISG B 0 A_PlayWeaponSound("weapons/pistol")
			PISG B 0 A_JumpIfInventory("PistolAccuracy", 8, "FireAccuracy8")
			PISG B 0 A_JumpIfInventory("PistolAccuracy", 7, "FireAccuracy7")
			PISG B 0 A_JumpIfInventory("PistolAccuracy", 6, "FireAccuracy6")
			PISG B 0 A_JumpIfInventory("PistolAccuracy", 5, "FireAccuracy5")
			PISG B 0 A_JumpIfInventory("PistolAccuracy", 4, "FireAccuracy4")
			PISG B 0 A_JumpIfInventory("PistolAccuracy", 3, "FireAccuracy3")
			PISG B 0 A_JumpIfInventory("PistolAccuracy", 2, "FireAccuracy2")
			PISG B 0 A_JumpIfInventory("PistolAccuracy", 1, "FireAccuracy1")
			goto FireAccuracy0
		FireAccuracy0:
			PISG B 1 BRIGHT A_FireBullets (1, 0, -1, 12, "NewBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
			goto FireDone
		FireAccuracy1:
			PISG B 1 BRIGHT A_FireBullets (1, 1.2, -1, 10, "NewBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
			goto FireDone
		FireAccuracy2:
			PISG B 1 BRIGHT A_FireBullets (2, 1.5, -1, 10, "NewBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
			goto FireDone
		FireAccuracy3:
			PISG B 1 BRIGHT A_FireBullets (2, 2, -1, 10, "NewBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
			goto FireDone
		FireAccuracy4:
			PISG B 1 BRIGHT A_FireBullets (2, 2.2, -1, 10, "NewBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
			goto FireDone
		FireAccuracy5:
			PISG B 1 BRIGHT A_FireBullets (2, 2.5, -1, 10, "NewBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
			goto FireDone
		FireAccuracy6:
			PISG B 1 BRIGHT A_FireBullets (3, 3, -1, 10, "NewBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
			goto FireDone
		FireAccuracy7:
			PISG B 1 BRIGHT A_FireBullets (3, 3.2, -1, 10, "NewBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
			goto FireDone
		FireAccuracy8:
			PISG B 1 BRIGHT A_FireBullets (3, 3.5, -1, 10, "NewBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
			goto FireDone
		FireDone:
			PISG C 0 A_FireCustomMissile("BulletCasingSpawnerRight",-45+random(-8,8),0,4,7)
			PISG C 1 BRIGHT
			PISG D 1 A_GunFlash("GiveAccuracy", GFF_NOEXTCHANGE)
			PISG E 1 A_WeaponReady(WRF_NOBOB)
			PISG FG 1 A_WeaponReady(WRF_NOBOB | WRF_ALLOWRELOAD)
			PISG H 0 A_GunFlash("TakeAccuracy", GFF_NOEXTCHANGE)
			PISG HI 1 A_WeaponReady(WRF_NOBOB | WRF_ALLOWRELOAD)
			PISG J 0 A_GunFlash("TakeAccuracy2", GFF_NOEXTCHANGE)
			PISG JK 1 A_WeaponReady(WRF_NOBOB | WRF_ALLOWRELOAD)
			PISG A 0 A_Refire
			goto Ready
		Reload:
			PISG A 0 A_JumpIfInventory("Silenced", 1, "SilReloadCheck")
			PISG A 0
			goto ReloadCheck
		ReloadCheck:
			PISR D 0 A_JumpIfInventory("Silenced", 1, "SilReloadCheck")
			PISR D 0 A_JumpIfInventory("PistolClip",14,2)
			PISR D 0 A_JumpIfInventory("MechAmmo",1,"ReloadStart")
			PISR D 0
			goto Ready
		ReloadStart:
			PISR A 0 A_PlaySound("9mmClipOut", CHAN_AUTO)
			PISR ABCDEFGHIJKL 2
			PISR MNOP 1
			PISR Q 0 A_PlaySound("9mmClipIn", CHAN_AUTO)
			PISR QRS 1
			PISR T 0 A_GunFlash("TakeAccuracy2", GFF_NOEXTCHANGE)
			goto ReloadAmmo
		ReloadAmmo:
			PISR T 0 A_TakeInventory("MechAmmo",1)
			PISR T 0 A_GiveInventory("PistolClip",1)
			PISR T 0 A_JumpIfInventory("PistolClip",14,"ReloadDone")
			PISR T 0 A_JumpIfInventory("MechAmmo",1,"ReloadAmmo")
			goto ReloadDone
		ReloadDone:
			PISR TUVWXYZ 1
			PIR2 ABCDEF 1
			PIR2 G 1 A_PlaySound("9mmSlide", CHAN_AUTO)
			PIR2 HIJK 2
			PIR2 K 0
			goto Ready
		AltFire:
			PISW A 0 A_JumpIfInventory("Silenced", 1, "RemoveSilencer")
			PISW A 0 A_GiveInventory("Silenced", 1)
			PISW ABCDEFGHIJKL 2
			PISW M 2 A_PlaySound("SilencerToggle", CHAN_AUTO)
			PISW NOPQRSTUVWXYZ 2
			PISX ABCDEFGHIJKLMNOPQ 2
			PISX Q 0
			goto SilReady
		RemoveSilencer:
			PISY A 0 A_TakeInventory("Silenced", 1)
			PISY ABCDEFGHIJKL 2
			PISY M 2 A_PlaySound("SilencerToggle", CHAN_AUTO)
			PISY NOPQRSTUVWXYZ 2
			PISZ ABCDEFGHIJKLMNOPQ 2
			PISZ Q 0
			goto Ready
			
		SilReady:
			PISS AAA 1 A_WeaponReady(WRF_ALLOWRELOAD)
			PISS A 0 A_GunFlash("TakeAccuracy", GFF_NOEXTCHANGE)
			loop
		SilDeselect:
			PISS AAA 0 A_Lower
			PISS A 1 A_Lower
			loop
		SilSelect:
			PISS AAA 0 A_Raise
			PISS A 1 A_Raise
			loop
		SilFire:
			PISS B 0 A_JumpIfNoAmmo("SilReloadCheck")
			PISG B 0 Radius_Quake(1, 2, 0, 1, 0)
			PISS B 0 BRIGHT
			PISS B 0 A_PlaySoundEX("SilencedPistol", "Weapon", 0, -1)
			PISS B 0 A_JumpIfInventory("PistolAccuracy", 8, "SilFireAccuracy8")
			PISS B 0 A_JumpIfInventory("PistolAccuracy", 7, "SilFireAccuracy7")
			PISS B 0 A_JumpIfInventory("PistolAccuracy", 6, "SilFireAccuracy6")
			PISS B 0 A_JumpIfInventory("PistolAccuracy", 5, "SilFireAccuracy5")
			PISS B 0 A_JumpIfInventory("PistolAccuracy", 4, "SilFireAccuracy4")
			PISS B 0 A_JumpIfInventory("PistolAccuracy", 3, "SilFireAccuracy3")
			PISS B 0 A_JumpIfInventory("PistolAccuracy", 2, "SilFireAccuracy2")
			PISS B 0 A_JumpIfInventory("PistolAccuracy", 1, "SilFireAccuracy1")
			goto SilFireAccuracy0
		SilFireAccuracy0:
			PISS B 1 BRIGHT A_FireBullets (0, 0, -1, 10, "NewBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
			goto SilFireDone
		SilFireAccuracy1:
			PISS B 1 BRIGHT A_FireBullets (1, 1, -1, 9, "NewBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
			goto SilFireDone
		SilFireAccuracy2:
			PISS B 1 BRIGHT A_FireBullets (1, 1.5, -1, 9, "NewBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
			goto SilFireDone
		SilFireAccuracy3:
			PISS B 1 BRIGHT A_FireBullets (2, 1.5, -1, 9, "NewBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
			goto SilFireDone
		SilFireAccuracy4:
			PISS B 1 BRIGHT A_FireBullets (2, 1.8, -1, 9, "NewBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
			goto SilFireDone
		SilFireAccuracy5:
			PISS B 1 BRIGHT A_FireBullets (2, 2, -1, 9, "NewBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
			goto SilFireDone
		SilFireAccuracy6:
			PISS B 1 BRIGHT A_FireBullets (2.5, 2, -1, 9, "NewBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
			goto SilFireDone
		SilFireAccuracy7:
			PISS B 1 BRIGHT A_FireBullets (2.5, 2.5, -1, 9, "NewBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
			goto SilFireDone
		SilFireAccuracy8:
			PISS B 1 BRIGHT A_FireBullets (2.8, 2.8, -1, 9, "NewBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
			goto SilFireDone
		SilFireDone:
			PISS C 0 A_FireCustomMissile("BulletCasingSpawnerRight",-45+random(-8,8),0,4,7)
			PISS C 1 BRIGHT
			PISS D 1 A_GunFlash("GiveAccuracy", GFF_NOEXTCHANGE)
			PISS E 1 A_WeaponReady(WRF_NOBOB)
			PISS FG 1 A_WeaponReady(WRF_NOBOB | WRF_ALLOWRELOAD)
			PISS H 0 A_GunFlash("TakeAccuracy", GFF_NOEXTCHANGE)
			PISS HI 1 A_WeaponReady(WRF_NOBOB | WRF_ALLOWRELOAD)
			PISS J 0 A_GunFlash("TakeAccuracy2", GFF_NOEXTCHANGE)
			PISS JK 1 A_WeaponReady(WRF_NOBOB | WRF_ALLOWRELOAD)
			PISS A 0 A_Refire
			goto SilReady	
		SilReloadCheck:
			PSRS D 0 A_JumpIfInventory("PistolClip",14,2)
			PSRS D 0 A_JumpIfInventory("MechAmmo",1,"SilReloadStart")
			PSRS D 0
			goto SilReady
		SilReloadStart:
			PSRS D 0 A_PlayWeaponSound("9mmClipOut")
			PSRS DEFGHIJK 3
			PSRS L 3 A_PlayWeaponSound("9mmClipIn")
			PSRS M 3 A_GunFlash("TakeAccuracy2", GFF_NOEXTCHANGE)
			goto SilReloadAmmo
		SilReloadAmmo:
			NULL A 0 A_TakeInventory("MechAmmo",1)
			NULL A 0 A_GiveInventory("PistolClip",1)
			NULL A 0 A_JumpIfInventory("PistolClip",14,"SilReloadDone")
			NULL A 0 A_JumpIfInventory("MechAmmo",1,"SilReloadAmmo")
			goto SilReloadDone
		SilReloadDone:
			PSRS NO 3
			PSRS P 3 A_PlayWeaponSound("9mmSlide")
			PSRS QR 3
			PSRS STUV 2
			goto SilReady

		Flash:
			PISF AAAA 0 A_FireCustomMissile("PistolSmoke", Random(-3,3), false, 3, 7)
			PISF A 0 A_FireCustomMissile("GunSparkSpawner", 0, false, 3, 6)
			PISF A 2 bright A_Light1
			PISF B 1 bright A_Light0
			stop
			
		TakeAccuracy:
			TNT1 A 0 bright A_TakeInventory("PistolAccuracy", 1)
			goto CheckCrosshair
		TakeAccuracy2:
			TNT1 A 0 bright A_TakeInventory("PistolAccuracy", 2)
			goto CheckCrosshair
		GiveAccuracy:
			TNT1 A 0 bright A_GiveInventory("PistolAccuracy", 1)
			goto CheckCrosshair	
		CheckCrosshair:
			TNT1 A 0 A_JumpIfInventory("PistolAccuracy", 8, "SetCrosshair8")
			TNT1 A 0 A_JumpIfInventory("PistolAccuracy", 7, "SetCrosshair7")
			TNT1 A 0 A_JumpIfInventory("PistolAccuracy", 6, "SetCrosshair6")
			TNT1 A 0 A_JumpIfInventory("PistolAccuracy", 5, "SetCrosshair5")
			TNT1 A 0 A_JumpIfInventory("PistolAccuracy", 4, "SetCrosshair4")
			TNT1 A 0 A_JumpIfInventory("PistolAccuracy", 3, "SetCrosshair3")
			TNT1 A 0 A_JumpIfInventory("PistolAccuracy", 2, "SetCrosshair2")
			TNT1 A 0 A_JumpIfInventory("PistolAccuracy", 1, "SetCrosshair1")
			TNT1 A 0 A_SetCrosshair(90)
			stop
		SetCrosshair1:
			TNT1 A 0 A_SetCrosshair(91)
			stop
		SetCrosshair2:
			TNT1 A 0 A_SetCrosshair(92)
			stop
		SetCrosshair3:
			TNT1 A 0 A_SetCrosshair(93)
			stop
		SetCrosshair4:
			TNT1 A 0 A_SetCrosshair(94)
			stop
		SetCrosshair5:
			TNT1 A 0 A_SetCrosshair(95)
			stop
		SetCrosshair6:
			TNT1 A 0 A_SetCrosshair(96)
			stop
		SetCrosshair7:
			TNT1 A 0 A_SetCrosshair(97)
			stop
		SetCrosshair8:
			TNT1 A 0 A_SetCrosshair(98)
			stop
	}
}

Actor PistolSmoke
{
	Projectile
	Radius 1
	Height 1
	Speed  5
	RenderStyle Translucent
	Alpha 0.1
	Scale 0.07
	+DONTSPLASH
	-ACTIVATEPCROSS
	-ACTIVATEIMPACT
	+FORCEXYBILLBOARD
	+CANBOUNCEWATER
	+HEXENBOUNCE
	+CLIENTSIDEONLY
	+ALLOWCLIENTSPAWN
	+NOBLOCKMAP
	+NOGRAVITY
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 3 ThrustThingZ(0, Random(0, 1), Random(0,1), 1)
		SMO2 ABCDEFGHIJKLMNOPQ 2
		stop
	Death:
		TNT1 AA 1
		stop
	}
}

actor Railmode : BaseCheck
{
}

actor TechUpgraded : BaseCheck
{
}

actor Tails_TechPistol : MageWeapon
{
	Tag "TLS-912 TechPistol"
	Decal TechRailScorch
	attacksound "TechRail"
	obituary "%o was blasted by %k's TechPistol."
	weapon.selectionorder 1500
	weapon.kickback 100
	weapon.ammotype "CellAmmo"
	weapon.ammouse 1
	weapon.ammogive 0
	+WEAPON.CHEATNOTWEAPON
	+WEAPON.WIMPY_WEAPON
	states
	{
	Ready:
		TEKP A 0 A_JumpIfInventory("RailMode", 1, "RailModeReady")
		TEKP A 0 A_JumpIfInventory("TechUpgraded", 1, "PowerReady")
		TEKP AAAA 1 A_WeaponReady
		goto Ready
	RailModeReady:
		TEKR A 1 A_WeaponReady
		loop
	PowerReady:
		TEKS A 1 A_WeaponReady
		loop
	Deselect:
		TEKP A 0 A_JumpIfInventory("RailMode", 1, "RailModeDeselect")
		TEKP A 0 A_JumpIfInventory("TechUpgraded", 1, "PowerDeselect")
		goto NormalDeselect
	NormalDeselect:
		TEKP A 1 A_Lower
		TEKP A 0 A_Lower
		loop
	RailModeDeselect:
		TEKR A 1 A_Lower
		TEKR A 0 A_Lower
		loop
	PowerDeselect:
		TEKS A 1 A_Lower
		loop
	Select:
		TEKP A 0 A_JumpIfInventory("RailMode", 1, "RailModeSelect")
		TEKP A 0 A_JumpIfInventory("TechUpgraded", 1, "PowerSelect")
		TEKP A 1 A_Raise
		goto NormalSelect
	NormalSelect:
		TEKP A 0 A_Raise
		TEKP A 1 A_Raise
		loop
	RailModeSelect:
		TEKR A 1 A_Raise
		TEKR A 0 A_Raise
		loop
	PowerSelect:
		TEKS A 1 A_Raise
		loop
	Fire:
		TEKP A 0 A_JumpIfInventory("RailMode", 1, "RailFire")
		TEKP A 0 A_JumpIfInventory("TechUpgraded", 1, "PowerFire")
		TEKP A 1
		TEKP B 0 Radius_Quake(1, 3, 0, 1, 0)
		TEKP B 0 A_GunFlash("Flash")
		TEKP B 0 A_PlayWeaponSound("TechPlasma")
		TEKP B 0 A_FireCustomMissile("TechPlasma", 0, 1, 13, 0)
		TEKP B 2 A_SetPitch(pitch-0.75)
		TEKP CDE 1 A_SetPitch(pitch+0.25)
		TEKP FGHIJ 2
		TEKP A 2
		TEKP A 0 A_Refire
		goto Ready
	PowerFire:
		TEKS A 1
		TEKS B 0 Radius_Quake(4, 3, 0, 1, 0)
		TEKS B 0 A_GunFlash("SuperFlash")
		TEKS B 0 A_PlayWeaponSound("TechPlasmaSuper")
		TEKS B 0 A_FireCustomMissile("SuperTechPlasma", 0, 1, 13, 0)
		TEKS B 2 A_SetPitch(pitch-1.5)
		TEKS CDE 1 A_SetPitch(pitch+0.5)
		TEKS FGHIJ 2
		TEKS A 3
		TEKS A 0 A_Refire
		goto Ready
	RailFire:
		TEKR B 0 Radius_Quake(2, 3, 0, 1, 0)
		TEKR B 0 A_GunFlash("RailFlash")
		TEKR B 0 A_PlayWeaponSound("TechPlasma")
		TEKR B 0 A_RailAttack(65, 6, 1, "00 40 FF", "AA FF FF")
		TEKR B 0 A_TakeInventory("CellAmmo", 4)
		TEKR B 2 A_SetPitch(pitch-1.5)
		TEKR CDE 1 A_SetPitch(pitch+0.5)
		TEKR FGHIJ 2
		TEKR A 13
		TEKR A 0 A_Refire
		goto Ready
	Altfire:
		TEKP A 0 A_JumpIfInventory("RailMode", 1, "PlasmaMode")
		TEKP A 0 A_JumpIfInventory("RailGunCore", 1, "RailMode")
		goto Ready
	RailMode:
		TEKR A 0 A_PlayWeaponSound("ChangeMode")
		TEKR A 10
		TEKR A 0 A_GiveInventory("RailMode", 1)
		goto Ready
	PlasmaMode:
		TEKP A 0 A_JumpIfInventory("TechUpgraded", 1, "SuperPlasmaMode")
		TEKP A 0 A_PlayWeaponSound("ChangeMode")
		TEKP A 10
		TEKP A 0 A_TakeInventory("RailMode", 1)
		goto Ready
	SuperPlasmaMode:
		TEKS A 0 A_PlayWeaponSound("ChangeMode")
		TEKS A 10
		TEKS A 0 A_TakeInventory("RailMode", 1)
		goto Ready
	Flash:
		TEKF A 1 bright A_Light1
		TEKF A 1 bright A_Light2
		TEKF A 0 bright A_Light0
		stop
	RailFlash:
		TKRF A 1 bright A_Light1
		TKRF A 1 bright A_Light2
		TKRF A 0 bright A_Light0
		stop
	SuperFlash:
		TKSF A 1 bright A_Light1
		TKSF A 1 bright A_Light2
		TKSF A 0 bright A_Light0
		stop
	}
}

actor RailGunCore : BaseCheck
{
}

actor TechPlasmaTrail
{
	Radius 2
	Height 2
	RenderStyle Add
	Alpha 0.8
	Scale 0.5
	Projectile
	+FORCEXYBILLBOARD
	States
	{
		Spawn:
			TNT1 A 2
			TPT1 BCDEFGHIJKLMNO 1 BRIGHT A_FadeOut(0.08)
			stop
		Death:
			TNT1 AA 1
			stop
	}
}

actor TechPlasmaBurst : TechPlasmaTrail
{
	Scale 0.6
	states
	{
	Spawn:
		TPT1 ABCDEFGHIJKLMNO 1 BRIGHT
		stop
	}
}

actor TechPlasma
{
	Radius 8
	Height 8
	Speed 50
	Damage (16)
	Scale 0.75
	BounceSound "TechPlasmaBounce"
	BounceCount 2
	BounceFactor 1
	Projectile
	RenderStyle Add
	Alpha 1.0
	+HEXENBOUNCE
	+FORCEXYBILLBOARD
	States
	{
	Spawn:
		TPLA A 1 BRIGHT A_SpawnItemEX("TechPlasmaTrail", 0, 0, 0, MOMX/2+frandom(-1.0,1.0), MOMY/2+frandom(-1.0,1.0), MOMZ/2+frandom(-1.0,1.0), random(-180,180), SXF_CLIENTSIDE | SXF_ABSOLUTEMOMENTUM, 0)
		loop
	XDeath:
		TNT1 A 0
		TNT1 A 0 A_GiveToTarget("HitConfirmation", 1)
		goto Death
	Death:
		TPLA B 0
		TPLA B 0 A_PlaySound("TechPlasmaHit")
		TPLA BBBBBBBBB 0 A_SpawnItemEX("TechPlasmaBurst", 0, 0, 0, frandom(-1.5,1.5), frandom(-1.5,1.5), frandom(-1.5,1.5), random(-180,180), SXF_CLIENTSIDE, 0)
		TPLA BBBCCCDDD 1 BRIGHT A_SpawnItemEX("TechPlasmaBurst", 0, 0, 0, frandom(-1.0,1.0), frandom(-1.0,1.0), frandom(-1.0,1.0), random(-180,180), SXF_CLIENTSIDE, 0)
		stop
	}
}

actor SuperTechPlasma
{
	RenderStyle Add
	Alpha 1.0
	Radius 11
	Height 22
	Speed 50
	Damage (16)
	Obituary "%o wasn't aware of %k's technological genius."
	ReactionTime 128
	bouncesound "weapons/plasmax"
	BounceCount 2
	BounceFactor 1
	Projectile
	+HEXENBOUNCE
	+FORCERADIUSDMG
	+EXTREMEDEATH
	+FORCEXYBILLBOARD
	States
	{
		Spawn:
			TPS2 A 1 BRIGHT A_SpawnItemEX("SuperTechPlasmaTrail", Random(-8, 8), Random(-8, 8), Random(-8, 8), 0, 0, 0, 0, SXF_CLIENTSIDE, 0)
			TPS2 A 0 BRIGHT A_SpawnItemEX("SuperTechPlasmaTrail", Random(-8, 8), Random(-8, 8), Random(-8, 8), 0, 0, 0, 0, SXF_CLIENTSIDE, 0)
			TPS2 A 0 A_CountDown
			loop
		XDeath:
			TNT1 A 0
			TNT1 A 0 A_GiveToTarget("HitConfirmation", 1)
			goto Death
		Death:
			MISL B 0 A_PlaySound("TechPlasmaSuperBoom")
			MISL B 0 A_SetTranslucent(0.9, 1)
			MISL B 0 A_Explode(20, 64, XF_HURTSOURCE, false, 24)
			MISL BCD 1 BRIGHT
			stop
	}
}

actor SuperTechPlasmaTrail
{
	Radius 1
	Height 1
	RenderStyle Add
	Alpha 0.8
	Scale 0.4
	Projectile
	+CORPSE
	+FORCEXYBILLBOARD
	+NOINTERACTION
	States
	{
		Spawn:
			TPS2 BCDE 4 BRIGHT
			stop
		Death:
			TNT1 A 1
			stop
	}
}

ACTOR DukeClip : Ammo
{
	Inventory.MaxAmount 12 // size of the clip
	Ammo.BackpackAmount 0
	Ammo.BackpackMaxAmount 12 //MUST be the same as Inventory.MaxAmmount
	Inventory.Icon "MAGICON2"
	+IGNORESKILL
}

actor DukePistol : Weapon
{
	Tag "Hi-Point C9"
	Weapon.BobSpeed 1.5
	Weapon.BobStyle "Smooth"
	Weapon.BobRangeX 1.25
    Weapon.BobRangeY 1.25
	obituary "%k busted a cap in %o's ass."
	attacksound "DukePistol"
	weapon.selectionorder 1900
	weapon.kickback 100
	weapon.upsound "DukeClipIn"
	Weapon.AmmoType1 "DukeClip" //The guns magazine
	Weapon.AmmoType2 "MechAmmo" //The real ammo
	Weapon.AmmoGive 12
	Weapon.AmmoGive2 24
	Weapon.AmmoUse1 1
	Weapon.AmmoUse2 0
	+WEAPON.WIMPY_WEAPON
	+WEAPON.CHEATNOTWEAPON
	+WEAPON.AMMO_OPTIONAL
	states
	{
	Ready:
		DISG A 1 A_WeaponReady(WRF_ALLOWRELOAD)
		loop
	Deselect:
		DISG A 1 A_Lower
		loop
	Select:
		DISG A 1 A_Raise
		loop
	Fire:
		DISG B 0 A_JumpIfNoAmmo("Reload")
		DISG B 0 A_FireBullets (1.5, 1.5, 1, 10, "NewBulletPuff", FBF_USEAMMO | FBF_NORANDOM)
		DISG B 1 BRIGHT A_Gunflash
		DISG B 0 A_FireCustomMissile("BulletCasingSpawnerLeft",45+random(-8,8),0,-1,6)
		DISG C 1 BRIGHT
		DISG A 4
		DISG A 0 A_ReFire
		goto Ready
	Reload:
		DISG A 0
		Goto ReloadCheck

	ReloadCheck:
		DISG D 0 A_JumpIfInventory("DukeClip",12,2)
		DISG D 0 A_JumpIfInventory("MechAmmo",1,"ReloadStart")
		DISG A 0
		goto Ready+1

	ReloadStart:
		DISG D 5
		DISG E 5 A_PlaySound("DukeClipOut")
		DISG F 2
		DISG E 5
		DISG G 2
		DISG H 2
		goto ReloadAmmo

	ReloadAmmo:
		TNT1 A 0 A_TakeInventory("MechAmmo",1)
		TNT1 A 0 A_GiveInventory("DukeClip",1)
		TNT1 A 0 A_JumpIfInventory("DukeClip",12,"ReloadDone")
		TNT1 A 0 A_JumpIfInventory("MechAmmo",1,"ReloadAmmo")
		goto ReloadDone

	ReloadDone:
		DISG I 2 A_PlaySound("DukeClipIn")
		DISG J 2
		DISG K 2
		DISG E 2
		DISG D 2
		goto Ready
	Flash:
		TNT1 A 2 bright A_Light1
		TNT1 A 0 bright A_Light0
		stop
	}
}
